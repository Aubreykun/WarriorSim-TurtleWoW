var SIM=SIM||{};SIM.SETTINGS={init:function(){this.variables(),this.events(),this.buildSpells(),this.buildBuffs(),this.buildTalents(),this.buildRunes()},variables:function(){this.body=$("body"),this.buffs=this.body.find("article.buffs"),this.fight=this.body.find("article.fight"),this.rotation=this.body.find("article.rotation"),this.talents=this.body.find("article.talents"),this.filter=this.body.find("article.filter"),this.runes=this.body.find("article.runes"),this.close=this.body.find("section.settings .btn-close"),this.bg=this.body.find("section.sidebar .bg")},events:function(){var e=this;e.close.click(function(t){t.preventDefault(),$(".js-settings").removeClass("active"),$("section.settings").removeClass("active"),e.body.addClass("sidebar-mobile-open")}),e.buffs.on("click",".icon",function(t){let a=$(this).toggleClass("active");a.hasClass("active")&&(a.data("group")&&a.siblings().filter('[data-group="'+a.data("group")+'"]').removeClass("active"),a.data("disable-spell")&&$('.rotation [data-id="'+a.data("disable-spell")+'"]').removeClass("active"));for(let t of buffs)t.active=e.buffs.find('[data-id="'+t.id+'"]').hasClass("active");t.stopPropagation(),t.preventDefault(),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.talents.on("click",".icon",function(t){let a=e.getTalent($(this));if(e.getTalentTotal($(this))<5*a.y)return;let i=JSON.parse(localStorage[mode+(globalThis.profileid||0)]),s=parseInt(i.level),n=0;for(let e of talents)for(let t of e.t)n+=t.c;Math.max(s-9-n,0)<=0||(a.c=a.c<a.m?a.c+1:a.m,$(this).attr("data-count",a.c),a.c>=a.m&&$(this).addClass("maxed"),a.enable&&$('.rotation [data-id="'+a.enable+'"]').removeClass("hidden"),a.enablename&&$('.rotation [data-name="'+a.enablename+'"]').removeClass("hidden"),$(this).find("a").attr("href",WEB_DB_URL+"spell="+a.s[0==a.c?0:a.c-1]),SIM.UI.updateSession(),SIM.UI.updateSidebar(),e.buildSpells())}),e.talents.on("contextmenu",".icon",function(t){t.preventDefault();let a=e.getTalent($(this));if(a.c<1)return;a.c--;let i=!0,s=[],n=$(this).parents("table").index()-2;for(let e of talents[n].t)s[e.y]=(s[e.y]||0)+e.c;for(let e=0;e<s.length;e++)s[e]+=s[e-1]||0;for(let e of talents[n].t)e.c&&5*e.y>s[e.y-1]&&(i=!1);if(i){if($(this).attr("data-count",a.c),$(this).removeClass("maxed"),0==a.c&&a.enable){$('.rotation [data-id="'+a.enable+'"]').removeClass("active").addClass("hidden");for(let e of spells)e.id==a.enable&&(e.active=!1)}if(0==a.c&&a.enablename){$('.rotation [data-name="'+a.enablename+'"]').removeClass("active").addClass("hidden");for(let e of spells)e.name==a.enablename&&(e.active=!1)}$(this).find("a").attr("href",WEB_DB_URL+"spell="+a.s[0==a.c?0:a.c-1]),SIM.UI.updateSession(),SIM.UI.updateSidebar()}else a.c++}),e.talents.on("click",".js-talents-reset",function(t){t.preventDefault();for(let e of talents)for(let t of e.t)t.c=0;SIM.UI.updateSession(),SIM.UI.updateSidebar(),e.buildTalents(),e.buildSpells()}),e.filter.on("click",".sources > li",function(t){if($(this).toggleClass("active"),$(this).hasClass("active")){let t=$(this).data("id");e.filter.find(`.phases [data-sources*="${t}"]`).addClass("active")}SIM.UI.updateSession(),SIM.UI.filterGear(),t.preventDefault()}),e.filter.on("click",".js-toggle, li ul",function(e){if(e.stopPropagation(),this.classList.contains("js-toggle")){var t=this.getAttribute("data-id");$("."+t).toggleClass("hidden")}}),e.filter.on("click",".phases li",function(t){$(this).toggleClass("active");let a=$(this).data("sources").split(","),i=$(this).hasClass("active");for(let t of a)i?e.filter.find('.sources [data-id="'+t+'"]').addClass("active"):e.filter.find('.sources [data-id="'+t+'"]').removeClass("active");SIM.UI.updateSession(),SIM.UI.filterGear()}),e.buffs.on("click","label",function(e){$(this.parentElement).find("div").toggleClass("hidden"),SIM.SETTINGS.toggleArticle(this)}),e.rotation.on("click","label",function(e){$(this.parentElement).find("div").toggleClass("hidden"),SIM.SETTINGS.toggleArticle(this)}),e.fight.on("click","label",function(e){$(this.parentElement).find("ul").toggleClass("hidden"),SIM.SETTINGS.toggleArticle(this)}),e.talents.on("click","label",function(e){$(this.parentElement).find("table").toggleClass("hidden").end().find("#top").toggleClass("hidden top"),SIM.SETTINGS.toggleArticle(this)}),e.runes.on("click","label",function(e){$(this.parentElement).find("div").toggleClass("hidden"),SIM.SETTINGS.toggleArticle(this)}),e.filter.on("click","label",function(e){$(this.parentElement).find("ul").toggleClass("hidden"),SIM.SETTINGS.toggleArticle(this)}),e.fight.on("input",".slider",function(e){var t=$(this).val();$(this).next().val(t),$(this).next().trigger("keyup")}),e.fight.on("change",'select[name="race"]',function(t){var a=$(this).val();e.bg.attr("data-race",a),t.stopPropagation(),SIM.UI.updateSession(),SIM.UI.updateSidebar(),e.buildSpells()}),e.fight.on("change",'select[name="aqbooks"]',function(t){t.stopPropagation(),SIM.UI.updateSession(),SIM.UI.updateSidebar(),e.buildSpells(),e.buildBuffs()}),e.fight.on("change",'select[name="bleedreduction"]',function(e){e.stopPropagation(),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("change",'select[name="spellqueueing"]',function(e){e.stopPropagation(),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("keyup",'input[type="text"]',function(t){t.stopPropagation(),e.body.find('.active[data-type="profiles"]').length||SIM.UI.filterGear(),SIM.UI.updateSession(),SIM.UI.updateSidebar(),e.buildBuffs(),e.buildSpells()}),e.fight.on("change",'select[name="batching"]',function(e){e.stopPropagation(),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("input",'input[name="targetcustomarmor"]',function(e){e.stopPropagation();let t=$('select[name="targetbasearmor"]').get(0);t.options[t.options.length-1].innerHTML=$(this).val(),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("change",'select[name="targetbasearmor"]',function(e){e.stopPropagation();let t=$('input[name="targetcustomarmor"]');this.selectedOptions[0].dataset.custom?(this.selectedOptions[0].innerHTML="",t.val(0),t.addClass("focus"),t.focus()):(this.options[this.options.length-1].innerHTML="Custom Value",t.val(""),t.removeClass("focus")),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.rotation.on("click",".spell a",function(t){t.stopPropagation(),t.preventDefault();let a=$(this).closest(".spell"),i=a.data("id");a.toggleClass("open"),a.removeClass("fade");let s=a.hasClass("open");s?(a.siblings().addClass("fade"),a.siblings(".open").each(function(){$(this).removeClass("open"),e.hideSpellDetails($(this))})):a.siblings().removeClass("fade");for(let t of spells)t.id==i&&(s?e.buildSpellDetails(t,a):e.hideSpellDetails(a))}),e.rotation.on("click",".details li:not(.nobox)",function(t){if("LI"!==t.target.nodeName)return;$(this).toggleClass("active");let a,i=$(this).hasClass("active"),s=$(this).parents(".details").data("id");for(let e of spells)e.id==s&&(a=e);if("active"==$(this).data("id")||"timetoendactive"==$(this).data("id")||"timetostartactive"==$(this).data("id")){if(t.originalEvent&&t.originalEvent.isTrusted&&e.rotation.find(`.spell[data-id="${s}"]`).toggleClass("active",i),i&&"Heroic Strike"==a.name)for(let t of spells)"Cleave"==t.name&&t.active&&(t.active=!1,e.rotation.find(`.spell[data-id="${t.id}"]`).removeClass("active"));if(i&&"Cleave"==a.name)for(let t of spells)"Heroic Strike"==t.name&&t.active&&(t.active=!1,e.rotation.find(`.spell[data-id="${t.id}"]`).removeClass("active"))}i&&$(this).data("group")&&$(this).siblings(`.active[data-group="${$(this).data("group")}"]`).click(),a[$(this).data("id")]=i,t.originalEvent&&t.originalEvent.isTrusted&&("timetoendactive"==$(this).data("id")||"timetostartactive"==$(this).data("id"))&&(a.active=i),SIM.UI.updateSession()}),e.rotation.on("keyup",".details input",function(e){let t=$(this).parents(".details").data("id");for(let e of spells)e.id==t&&(e[$(this).attr("name")]=$(this).val());SIM.UI.updateSession()}),e.rotation.on("change",".details select",function(e){let t=$(this).parents(".details").data("id");for(let e of spells)e.id==t&&(e[$(this).attr("name")]=$(this).val());SIM.UI.updateSession()})},buildSpells:function(){let e=JSON.parse(localStorage[mode+(globalThis.profileid||0)]),t=parseInt(e.level),a=this.rotation.find("div:first");a.empty(),this.rotation.find(".open")&&this.hideSpellDetails(this.rotation.find(".open"));let i="",s="";for(let n of spells){if(n.sod&&"sod"!==mode){n.active=!1;continue}if(26296==n.id&&"Troll"!==e.race){n.active=!1;continue}if(20572==n.id&&"Orc"!==e.race){n.active=!1;continue}let l,o,d=parseInt(n.minlevel||0),r=parseInt(n.maxlevel||60);if(t<d||t>r){n.active=!1;continue}for(let e of talents)for(let t of e.t)t.n==n.name&&(l=t);if(l&&l.enable&&0==l.c){n.active=!1;continue}if("undefined"!=typeof runes){for(let e in runes)for(let t of runes[e])t.enable==n.id&&(o=t);if(o&&!o.selected){n.active=!1;continue}}else if(n.rune){n.active=!1;continue}if(0==e.adjacent&&"Cleave"==n.name){n.active=!1;continue}if("Yes"==e.aqbooks&&void 0!==n.aq&&!1===n.aq){n.active=!1;continue}if("No"==e.aqbooks&&n.aq){n.active=!1;continue}if(n.item){let e;for(let t in gear)for(let a of gear[t])n.id==a.id&&a.selected&&(e=a);if(!e){n.active=!1;continue}(n.timetoendactive||n.timetostartactive)&&(n.active=!0)}if(n.itemblock){let e=0,t=[226499,226497,226494,226495,226493,226492,226498,226496,232251,232249,232254,232247,232252,232248,232250,232253];for(let a in gear)for(let i of gear[a])i.selected&&t.includes(i.id)&&e++;if(e<4){n.active=!1;continue}n.active=!0}let c=$(`<div data-id="${n.id}" data-name="${n.name}" class="spell ${n.active?"active":""}"><div class="icon">\n            <img src="https://wow.zamimg.com/images/wow/icons/medium/${n.iconname.toLowerCase()}.jpg " alt="${n.name}">\n            <a href="${WEB_DB_URL}${n.item?"item":"spell"}=${n.id}" class="wh-tooltip"></a>\n            </div></div>`);n.buff?i+=c[0].outerHTML:n.item||n.itemblock?s+=c[0].outerHTML:a.append(c)}a.append($('<div class="label">Buffs</div>')),a.append(i),s.length>0&&(a.append($('<div class="label">Items</div>')),a.append(s))},buildSpellDetails(e,t){let a=this.rotation.find(".details");a.data("id",e.id),a.empty(),a.append(`<label>${e.name}</label>`);let i=$("<ul></ul>");void 0!==e.haste&&i.append(`<li class="nobox ${e.haste?"active":""}">Attack speed set at <input type="text" name="haste" value="${e.haste}" data-numberonly="true" /> %</li>`),void 0!==e.priority&&i.append(`<li data-id="priority" class="nobox active">Priority <select name="priority">\n              <option value="0" ${0==e.priority?"selected":""}>Not used</option>\n              <option value="1" ${1==e.priority?"selected":""}>1</option>\n              <option value="2" ${2==e.priority?"selected":""}>2</option>\n              <option value="3" ${3==e.priority?"selected":""}>3</option>\n              <option value="4" ${4==e.priority?"selected":""}>4</option>\n              <option value="5" ${5==e.priority?"selected":""}>5</option>\n              <option value="6" ${6==e.priority?"selected":""}>6</option>\n              <option value="7" ${7==e.priority?"selected":""}>7</option>\n              <option value="8" ${8==e.priority?"selected":""}>8</option>\n              <option value="9" ${9==e.priority?"selected":""}>9</option>\n              <option value="10" ${10==e.priority?"selected":""}>Highest</option>\n            </select></li>`),void 0!==e.expriority&&i.append(`<li data-id="expriority" class="nobox active">Execute phase <select name="expriority">\n                <option value="0" ${0==e.expriority?"selected":""}>Not used</option>\n                <option value="1" ${1==e.expriority?"selected":""}>1</option>\n                <option value="2" ${2==e.expriority?"selected":""}>2</option>\n                <option value="3" ${3==e.expriority?"selected":""}>3</option>\n                <option value="4" ${4==e.expriority?"selected":""}>4</option>\n                <option value="5" ${5==e.expriority?"selected":""}>5</option>\n                <option value="6" ${6==e.expriority?"selected":""}>6</option>\n                <option value="7" ${7==e.expriority?"selected":""}>7</option>\n                <option value="8" ${8==e.expriority?"selected":""}>8</option>\n                <option value="9" ${9==e.expriority?"selected":""}>9</option>\n                <option value="10" ${10==e.expriority?"selected":""}>Highest</option>\n            </select></li>`),void 0!==e.timetoend||e.noactiveoption||i.append(`<li data-id="active" class="${e.active?"active":""}">Enabled </li>`),void 0!==e.afterswing&&i.append(`<li data-id="afterswing" class="${e.afterswing?"active":""}">Use only after a swing reset</li>`),void 0!==e.minrage&&11597!=e.id&&i.append(`<li data-id="minrageactive" class="${e.minrageactive?"active":""}">${"Heroic Strike"==e.name?"Queue":"Use"} when above <input type="text" name="minrage" value="${e.minrage}" data-numberonly="true" /> rage</li>`),void 0!==e.minrage&&11597==e.id&&i.append(`<li data-id="minrageactive" class="${e.minrageactive?"active":""}" data-group="usage">Only use when above <input type="text" name="minrage" value="${e.minrage}" data-numberonly="true" /> rage</li>`),void 0!==e.maxrage&&i.append(`<li data-id="maxrageactive" class="${e.maxrageactive?"active":""}">Don't switch stance when above <input type="text" name="maxrage" value="${e.maxrage}" data-numberonly="true" /> rage</li>`),void 0!==e.maincd&&i.append(`<li data-id="maincdactive" class="${e.maincdactive?"active":""}">Don't ${"Heroic Strike"==e.name?"queue":"use"} if BT / MS cooldown shorter than <input type="text" name="maincd" value="${e.maincd}" data-numberonly="true" /> seconds</li>`),void 0!==e.duration&&i.append(`<li data-id="durationactive" class="${e.durationactive?"active":""}" data-group="usage">Only use every <input type="text" name="duration" value="${e.duration}" data-numberonly="true" /> seconds</li>`),void 0!==e.unqueue&&i.append(`<li data-id="unqueueactive" class="${e.unqueueactive?"active":""}">Unqueue if below <input type="text" name="unqueue" value="${e.unqueue}" data-numberonly="true" /> rage before MH swing</li>`),void 0!==e.exmacro&&i.append(`<li data-id="exmacro" class="${e.exmacro?"active":""}" data-group="ex">Always queue when casting Execute</li>`),void 0!==e.timetostart&&i.append(`<li data-id="timetostartactive" data-group="timeto" class="${e.timetostartactive?"active":""}">Use <input type="text" name="timetostart" value="${e.timetostart}" data-numberonly="true" /> seconds from the start of the fight</li>`),void 0!==e.timetoend&&i.append(`<li data-id="timetoendactive" data-group="timeto" class="${e.timetoendactive?"active":""}">Use <input type="text" name="timetoend" value="${e.timetoend}" data-numberonly="true" /> seconds from the end of the fight</li>`),void 0!==e.priorityap&&i.append(`<li data-id="priorityapactive" class="${e.priorityapactive?"active":""}">Don't use if Attack Power is higher than <input type="text" name="priorityap" value="${e.priorityap}" data-numberonly="true" style="width: 25px" /></li>`),void 0!==e.procblock&&i.append(`<li data-id="procblock" class="${e.procblock?"active":""}">Don't use rage until it procs</li>`),void 0!==e.rageblock&&i.append(`<li data-id="rageblockactive" class="${e.rageblockactive?"active":""}">Don't use rage below <input type="text" name="rageblock" value="${e.rageblock}" data-numberonly="true" /> rage</li>`),void 0!==e.globals&&i.append(`<li data-id="globalsactive" class="${e.globalsactive?"active":""}" data-group="usage">Only use on first <input type="text" name="globals" value="${e.globals}" data-numberonly="true" /> globals</li>`),void 0!==e.chargeblock&&i.append(`<li data-id="chargeblockactive" class="${e.chargeblockactive?"active":""}">Don't use rage below <input type="text" name="chargeblock" value="${e.chargeblock}" data-numberonly="true" /> CbR charges</li>`),void 0!==e.erageblock&&i.append(`<div class="label">Execute Phase:</div><li data-id="erageblockactive" class="${e.erageblockactive?"active":""}">Don't use rage below <input type="text" name="erageblock" value="${e.erageblock}" data-numberonly="true" /> rage</li>`),void 0!==e.echargeblock&&i.append(`<li data-id="echargeblockactive" class="${e.echargeblockactive?"active":""}">Don't use rage below <input type="text" name="echargeblock" value="${e.echargeblock}" data-numberonly="true" /> CbR charges</li>`),void 0!==e.alwaysheads&&i.append(`<li data-id="alwaysheads" data-group="coinflip" class="${e.alwaysheads?"active":""}">Always heads</li>`),void 0!==e.alwaystails&&i.append(`<li data-id="alwaystails" data-group="coinflip" class="${e.alwaystails?"active":""}">Always tails</li>`),void 0!==e.zerkerpriority&&i.append(`<li data-id="zerkerpriority" class="${e.zerkerpriority?"active":""}">Prioritize over Bloodrage</li>`),void 0!==e.resolve&&i.append(`<li data-id="resolve" class="${e.resolve?"active":""}">Only use if Defender's Resolve is not up</li>`),void 0!==e.swordboard&&i.append(`<li data-id="swordboard" class="${e.swordboard?"active":""}">Only use after a Sword & Board proc</li>`),void 0!==e.swingtimer&&i.append(`<li data-id="swingtimeractive" class="${e.swingtimeractive?"active":""}">Don't use if swing timer longer than <input type="text" name="swingtimer" value="${e.swingtimer}" data-numberonly="true" /> secs</li>`),void 0!==e.secondarystance&&i.append(`<li data-id="secondarystance" class="nobox active">Secondary stance <select name="secondarystance">\n                <option value="battle" ${"battle"==e.secondarystance?"selected":""}>Battle Stance</option>\n                <option value="def" ${"def"==e.secondarystance?"selected":""}>Defensive Stance</option>\n                <option value="zerk" ${"zerk"==e.secondarystance?"selected":""}>Berserker Stance</option>\n                <option value="glad" ${"glad"==e.secondarystance?"selected":""}>Gladiator Stance</option></option>\n            </select></li>`),void 0!==e.switchstart&&i.append(`<li data-id="switchstart" class="${e.switchstart?"active":""}">Switch stance at fight start</li>`),void 0!==e.switchtimeactive&&i.append(`<li data-id="switchtimeactive" class="${e.switchtimeactive?"active":""}">Switch if any Forecast shorter than <input type="text" name="switchtime" value="${e.switchtime}" data-numberonly="true" /> secs AND rage below <input type="text" name="switchrage" value="${e.switchrage}" data-numberonly="true" /></li>`),void 0!==e.switchoractive&&i.append(`<li data-id="switchoractive" class="${e.switchoractive?"active":""}">Switch if any Forecast shorter than <input type="text" name="switchortime" value="${e.switchortime}" data-numberonly="true" /> secs OR rage below <input type="text" name="switchorrage" value="${e.switchorrage}" data-numberonly="true" /></li>`),void 0!==e.switchechoesactive&&i.append(`<li data-id="switchechoesactive" class="${e.switchechoesactive?"active":""}">Switch if any Echoes shorter than <input type="text" name="switchechoestime" value="${e.switchechoestime}" data-numberonly="true" /> secs and rage below <input type="text" name="switchechoesrage" value="${e.switchechoesrage}" data-numberonly="true" /></li>`),void 0!==e.switchdefault&&i.append(`<li data-id="switchdefault" class="${e.switchdefault?"active":""}">Switch back to default stance as soon as possible</li>`),a.css("visibility","hidden"),a.append(i);let s=a.height();setTimeout(function(){a.css("visibility",""),t.css("margin-bottom",s+30+"px"),a.css("top",t.position().top+74+"px"),a.addClass("visible")},200)},hideSpellDetails(e){this.rotation.find(".details").removeClass("visible"),e.css("margin-bottom","0px")},toggleArticle:function(e){e.classList.contains("active")?(e.classList.add("inactive"),e.classList.remove("active")):(e.classList.add("active"),e.classList.remove("inactive"))},buildBuffs:function(){this.buffs.empty(),this.buffs.append('<label class="active">Buffs</label>');let e=JSON.parse(localStorage[mode+(globalThis.profileid||0)]),t=parseInt(e.level),a="",i="",s="",n="",l="",o="";for(let d of buffs){let r,c=parseInt(d.minlevel||0),p=parseInt(d.maxlevel||60);if(t<c||t>p){d.active=!1;continue}if("Yes"==e.aqbooks&&void 0!==d.aq&&!1===d.aq){d.active=!1;continue}if("No"==e.aqbooks&&d.aq){d.active=!1;continue}if("sod"!==mode&&d.sod){d.active=!1;continue}if("undefined"!=typeof runes){for(let e in runes)for(let t of runes[e])t.enable==d.id&&(r=t);if(r&&!r.selected){d.active=!1;continue}}else if(d.rune){d.active=!1;continue}let u=d.id;413479==d.id&&(u=412513);let f=d.spellid?"spell":"item",v=d.active?"active":"",h=d.group?`data-group="${d.group}"`:"",m=d.disableSpell?`data-disable-spell="${d.disableSpell}"`:"",g=`<div data-id="${d.id}" class="icon ${v}" ${h} ${m}>\n                            <img src="https://wow.zamimg.com/images/wow/icons/medium/${d.iconname.toLowerCase()}.jpg " alt="${d.name}">\n                            <a href="${WEB_DB_URL}${f}=${u}" class="wh-tooltip"></a>\n                        </div>`;d.worldbuff?a+=g:d.stance?l+=g:d.consume?i+=g:d.other?s+=g:d.armor||d.improvedexposed?n+=g:d.skill?o+=g:this.buffs.append(g)}this.buffs.append('<div class="label">Consumables</div>'),this.buffs.append(i),this.buffs.append('<div class="label">World Buffs</div>'),this.buffs.append(a),this.buffs.append('<div class="label">Other</div>'),this.buffs.append(s),this.buffs.append('<div class="label">Target\'s Armor (Current: <span id="currentarmor"></span>)</div>'),this.buffs.append(n),this.buffs.append('<div class="label">Default Stance</div>'),this.buffs.append(l),this.buffs.append('<div class="label">Skill Specialization</div>'),this.buffs.append(o),SIM.UI.updateSession(),SIM.UI.updateSidebar()},buildTalents:function(){this.talents.find("table").remove();for(let e of talents){let t=$('<table><tr><th colspan="4">'+e.n+"</th></tr></table>");for(let e=0;e<7;e++)t.prepend("<tr><td></td><td></td><td></td><td></td></tr>");for(let a of e.t){let e=$('<div class="icon" data-count="'+a.c+'" data-x="'+a.x+'" data-y="'+a.y+'"></div>');e.html('<img src="https://wow.zamimg.com/images/wow/icons/medium/'+a.iconname.toLowerCase()+'.jpg" alt="'+a.n+'" />'),a.c>=a.m&&e.addClass("maxed"),e.append(`<a href="${WEB_DB_URL}spell=`+a.s[0==a.c?0:a.c-1]+'" class="wh-tooltip"></a>'),t.find("tr").eq(a.y).children().eq(a.x).append(e)}this.talents.append(t)}},buildRunes:function(){if("undefined"!=typeof runes){this.runes.find("#runes-area").empty();for(let e in runes)for(let t in runes[e]){let a=runes[e][t];a.enable&&a.selected&&this.rotation.find('[data-id="'+a.enable+'"]').removeClass("hidden"),a.enable&&!a.selected&&this.rotation.find('[data-id="'+a.enable+'"]').addClass("hidden"),a.selected&&a.gladstance&&this.buffs.find('[data-id="'+a.enable+'"]').removeClass("hidden"),!a.selected&&a.gladstance&&this.buffs.find('[data-id="'+a.enable+'"]').addClass("hidden")}var e=$("nav > ul > li").map(function(){return $(this).data("type")}).get();for(let t of e)if(runes.hasOwnProperty(t)){let e=$("<table>"),a=$("<tbody>"),i=$(`<tr name="${t}">`);for(let e=0;e<runes[t].length;e++){let a=runes[t][e],s=$("<td>"),n=$(`<div data-id="${a.id}" class="rune"></div>`),l=$(`<div class="icon ${a.selected?"active":""}"></div>`),o=a.id;413479==o&&(o=412513),l.html(`<img src="https://wow.zamimg.com/images/wow/icons/medium/${a.iconname}.jpg" alt="${a.name}" />`),l.append(`<a href="${WEB_DB_URL}spell=${o}" class="wh-tooltip"></a>`),n.append(l),s.append(n),i.append(s)}let s=$("<tr>"),n=$(`<th style="text-align:left; padding-left: 4px;">${t.toString().charAt(0).toUpperCase()}${t.slice(1).toString().replace("1","")}</th>`);s.append(n),e.append(s).append(i),a.append(e),this.runes.find("#runes-area").append(a),$("#move").mouseenter(function(){$(this).animate({top:300*Math.random()},100),$(this).animate({left:300*Math.random()},100)})}else;}},getTalent:function(e){let t=e.parents("table").index()-1,a=e.data("x"),i=e.data("y");for(let e of talents[t-1].t)if(e.x==a&&e.y==i)return e},getTalentTotal:function(e){let t=e.parents("table").index()-1,a=0;for(let e of talents[t-1].t)a+=parseInt(e.c);return a}};