var RESULT={HIT:0,MISS:1,DODGE:2,CRIT:3,GLANCE:4},DEFENSETYPE={NONE:0,MAGIC:1,MELEE:2,RANGED:3},SCHOOL={NONE:0,PHYSICAL:1,HOLY:2,FIRE:4,NATURE:8,FROST:16,SHADOW:32,ARCANE:64},batching=0,step=0,log=!1,version=4;const TYPE={UPDATE:0,FINISHED:1,ERROR:2};class SimulationWorker{constructor(e,s,a){this.worker=new Worker("./dist/js/sim-worker.min.js"),this.worker.onerror=((...e)=>{a(...e),this.worker.terminate()}),this.worker.onmessage=(l=>{const[t,...r]=l.data;switch(t){case TYPE.UPDATE:s(...r);break;case TYPE.FINISHED:e(...r),this.worker.terminate();break;case TYPE.ERROR:a(...r),this.worker.terminate();break;default:a(`Unexpected type: ${t}`),this.worker.terminate()}})}start(e){e.globals=getGlobalsDelta(),this.worker.postMessage(e)}}class SimulationWorkerParallel{constructor(e,s,a,l){this.threads=e,this.callback_finished=s,this.callback_update=a,this.states=[...Array(this.threads)],this.workers=this.states.map((e,s)=>new SimulationWorker(e=>{this.states[s]={status:1,data:e},this.update()},(e,a)=>{this.states[s]={status:0,iteration:e,data:a},this.update()},e=>{this.error||(this.error=e,l(e))}))}update(){if(this.error)return;if(this.states.reduce((e,s)=>e+(s&&s.status||0),0)>=this.states.length){const e=this.states[0].data;this.states.slice(1).forEach(({data:s})=>{if(e.iterations+=s.iterations,e.totaldmg+=s.totaldmg,e.totalduration+=s.totalduration,e.mindps=Math.min(e.mindps,s.mindps),e.maxdps=Math.min(e.maxdps,s.maxdps),e.sumdps+=s.sumdps,e.sumdps2+=s.sumdps2,e.starttime=Math.min(e.starttime,s.starttime),e.endtime=Math.min(e.endtime,s.endtime),e.spread&&s.spread)for(let a in s.spread)e.spread[a]=(e.spread[a]||0)+s.spread[a];if(e.player&&s.player){for(let a in s.player.auras){const l=s.player.auras[a],t=e.player.auras[a];if(t){if(t.uptime+=l.uptime,l.data)for(let e=0;e<l.data.length;++e)t.data[e]+=l.data[e];l.totaldmg&&(t.totaldmg=(t.totaldmg||0)+l.totaldmg)}else e.player.auras[a]=l}for(let a in s.player.spells){const l=s.player.spells[a],t=e.player.spells[a];if(t){t.totaldmg+=l.totaldmg;for(let e=0;e<l.data.length;++e)t.data[e]+=l.data[e]}else e.player.spells[a]=l}function a(e,s){if(e){e.totaldmg+=s.totaldmg,e.totalprocdmg+=s.totalprocdmg;for(let a=0;a<s.data.length;++a)e.data[a]+=s.data[a];return e}return s}e.player.mh=a(e.player.mh,s.player.mh),s.player.oh&&(e.player.oh=a(e.player.oh,s.player.oh))}}),this.callback_finished(e)}else{let e=0;const s={iterations:this.iterations,totaldmg:0,totalduration:0};this.states.forEach(a=>{a&&(e+=a.status?a.data.iterations:a.iteration,s.totaldmg+=a.data.totaldmg,s.totalduration+=a.data.totalduration)}),this.callback_update(e,s)}}start(e){e.globals=getGlobalsDelta(),this.iterations=e.sim.iterations;let s=e.sim.iterations;this.workers.forEach((a,l)=>{const t=Math.round(s/(this.workers.length-l));s-=t,a.start({...e,sim:{...e.sim,iterations:t}})})}}class Simulation{static getConfig(){return{timesecsmin:parseInt($('input[name="timesecsmin"]').val()),timesecsmax:parseInt($('input[name="timesecsmax"]').val()),executeperc:parseInt($('input[name="executeperc"]').val()),startrage:parseInt($('input[name="startrage"]').val()),iterations:parseInt($('input[name="simulations"]').val()),batching:parseInt($('select[name="batching"]').val())}}constructor(e,s,a,l){l||(l=Simulation.getConfig()),this.player=e,this.timesecsmin=l.timesecsmin,this.timesecsmax=l.timesecsmax,this.executeperc=l.executeperc,this.startrage=l.startrage,this.iterations=l.iterations,batching=l.batching,this.idmg=0,this.totaldmg=0,this.totalduration=0,this.mindps=99999,this.maxdps=0,this.sumdps=0,this.sumdps2=0,this.maxcallstack=Math.min(Math.floor(this.iterations/10),1e3),this.starttime=0,this.endtime=0,this.cb_update=a,this.cb_finished=s,this.spread=[],log=1==this.iterations}startSync(){let e;for(this.starttime=(new Date).getTime(),e=1;e<=this.iterations;++e)this.run(),e%this.maxcallstack==0&&this.update(e);this.endtime=(new Date).getTime(),this.finished()}startAsync(){this.starttime=(new Date).getTime(),this.runAsync(1)}runAsync(e){this.run(),e==this.iterations?(this.endtime=(new Date).getTime(),this.finished()):e%this.maxcallstack==0?(this.update(e),setTimeout(()=>this.runAsync(e+1),0)):this.runAsync(e+1)}run(){step=0,this.idmg=0;let e,s,a=this.player;a.reset(this.startrage),this.maxsteps=rng(1e3*this.timesecsmin,1e3*this.timesecsmax),this.duration=this.maxsteps/1e3,this.executestep=this.maxsteps-parseInt(this.maxsteps*(this.executeperc/100));let l=!1,t=!1,r=0,i=0,p=0;for(let e of a.preporder)e.aura?p+=a.auras[e.classname.toLowerCase()].prep(this.maxsteps,p):a.spells[e.classname.toLowerCase()].prep&&a.spells[e.classname.toLowerCase()].prep(this.maxsteps);for(;step<this.maxsteps;){if(0!=r&&step%3e3==0&&a.talents.angermanagement&&(a.rage=a.rage>=99?100:a.rage+1,l=!0,a.auras.consumedrage&&a.rage>=60&&a.rage<81&&a.auras.consumedrage.use()),a.vaelbuff&&0!=r&&step%1e3==0&&(a.rage=a.rage>=60?100:a.rage+20,l=!0,a.auras.consumedrage&&a.rage>=60&&a.auras.consumedrage.use()),a.spells.themoltencore&&0!=r&&step%1e3==0&&a.spells.themoltencore.use(),a.target.speed&&step%a.target.speed==0){let e=a.rage,s=rng(a.target.mindmg,a.target.maxdmg),t=s/a.rageconversion*2.5;a.rage=Math.min(a.rage+t,100),l=!0,a.auras.consumedrage&&a.rage>=60&&e<60&&a.auras.consumedrage.use(),log&&this.player.log(`Target attack for ${s} gained ${t.toFixed(2)} rage `)}if(!i){if(a.mh.timer<=0&&(this.idmg+=a.attackmh(a.mh),l=!0),a.oh&&a.oh.timer<=0&&(this.idmg+=a.attackoh(a.oh),l=!0),l&&!a.spelldelay&&(a.auras.swarmguard&&a.auras.swarmguard.canUse()?(a.spelldelay=1,e=a.auras.swarmguard):a.auras.mightyragepotion&&a.auras.mightyragepotion.canUse()?(a.spelldelay=1,e=a.auras.mightyragepotion):a.auras.quicknesspotion&&a.auras.quicknesspotion.canUse()?(a.spelldelay=1,e=a.auras.quicknesspotion):a.auras.bloodlust&&a.auras.bloodlust.canUse()?(a.spelldelay=1,e=a.auras.bloodlust):a.spells.ragepotion&&a.spells.ragepotion.canUse()?(a.spelldelay=1,e=a.spells.ragepotion):a.spells.fireball&&a.spells.fireball.canUse()?(a.spelldelay=1,e=a.spells.fireball):a.spells.gunaxe&&a.spells.gunaxe.canUse()?(a.spelldelay=1,e=a.spells.gunaxe):a.auras.mildlyirradiated&&a.auras.mildlyirradiated.canUse()?(a.spelldelay=1,e=a.auras.mildlyirradiated):!a.timer&&a.spells.berserkerrage&&a.spells.berserkerrage.zerkerpriority&&a.spells.berserkerrage.canUse()?(a.spelldelay=1,e=a.spells.berserkerrage):a.spells.bloodrage&&a.spells.bloodrage.canUse()?(a.spelldelay=1,e=a.spells.bloodrage):a.auras.cloudkeeper&&a.auras.cloudkeeper.canUse()?(a.spelldelay=1,e=a.auras.cloudkeeper):a.auras.hategrips&&a.auras.hategrips.canUse()?(a.spelldelay=1,e=a.auras.hategrips):a.auras.worgenmark&&a.auras.worgenmark.canUse()?(a.spelldelay=1,e=a.auras.worgenmark):a.auras.voidmadness&&a.auras.voidmadness.canUse()?(a.spelldelay=1,e=a.auras.voidmadness):a.auras.gyromaticacceleration&&a.auras.gyromaticacceleration.canUse()?(a.spelldelay=1,e=a.auras.gyromaticacceleration):a.auras.gneurological&&a.auras.gneurological.canUse()?(a.spelldelay=1,e=a.auras.gneurological):a.auras.coinflip&&a.auras.coinflip.canUse()?(a.spelldelay=1,e=a.auras.coinflip):a.auras.pummeler&&a.auras.pummeler.canUse()?(a.spelldelay=1,e=a.auras.pummeler):a.auras.slayer&&a.auras.slayer.canUse()?(a.spelldelay=1,e=a.auras.slayer):a.auras.spider&&a.auras.spider.canUse()?(a.spelldelay=1,e=a.auras.spider):a.auras.gabbar&&a.auras.gabbar.canUse()?(a.spelldelay=1,e=a.auras.gabbar):a.auras.earthstrike&&a.auras.earthstrike.canUse()?(a.spelldelay=1,e=a.auras.earthstrike):a.auras.roarguardian&&a.auras.roarguardian.canUse()?(a.spelldelay=1,e=a.auras.roarguardian):a.auras.zandalarian&&a.auras.zandalarian.canUse()?(a.spelldelay=1,e=a.auras.zandalarian):a.auras.relentlessstrength&&a.auras.relentlessstrength.canUse()?(a.spelldelay=1,e=a.auras.relentlessstrength):a.auras.demontaintedblood&&a.auras.demontaintedblood.canUse()?(a.spelldelay=1,e=a.auras.demontaintedblood):a.auras.moonstalkerfury&&a.auras.moonstalkerfury.canUse()?(a.spelldelay=1,e=a.auras.moonstalkerfury):a.timer||(a.spells.stanceswitch.canUse()?(a.spelldelay=1,e=a.spells.stanceswitch):a.spells.unstoppablemight&&a.spells.unstoppablemight.canUse()?(a.spelldelay=1,e=a.spells.unstoppablemight):a.spells.victoryrush&&a.spells.victoryrush.canUse()?(a.spelldelay=1,e=a.spells.victoryrush):a.auras.flask&&a.auras.flask.canUse()?(a.spelldelay=1,e=a.auras.flask):a.auras.recklessness&&a.auras.recklessness.canUse()?(a.spelldelay=1,e=a.auras.recklessness):a.auras.deathwish&&a.auras.deathwish.canUse()?(a.spelldelay=1,e=a.auras.deathwish):a.auras.bloodfury&&a.auras.bloodfury.canUse()?(a.spelldelay=1,e=a.auras.bloodfury):a.auras.berserking&&a.auras.berserking.canUse()?(a.spelldelay=1,e=a.auras.berserking):a.spells.berserkerrage&&a.spells.berserkerrage.canUse()?(a.spelldelay=1,e=a.spells.berserkerrage):a.auras.battleshout&&a.auras.battleshout.canUse()?(a.spelldelay=1,e=a.auras.battleshout):a.spells.execute&&(step>=this.executestep||a.auras.suddendeath&&a.auras.suddendeath.timer)?a.spells.ragingblow&&a.spells.ragingblow.canUse(!0)?(a.spelldelay=1,e=a.spells.ragingblow):a.spells.berserkerrage&&a.spells.berserkerrage.canUse()?(a.spelldelay=1,e=a.spells.berserkerrage):a.spells.slam&&a.freeslam&&a.spells.slam.canUse()?(a.spelldelay=1,e=a.spells.slam):a.spells.shieldslam&&a.freeshieldslam&&a.spells.shieldslam.canUse()?(a.spelldelay=1,e=a.spells.shieldslam):a.auras.consumedrage&&a.auras.consumedrage.erageblock&&a.rage<a.auras.consumedrage.erageblock||a.auras.consumedrage&&a.auras.consumedrage.echargeblock&&a.auras.consumedrage.stacks<a.auras.consumedrage.echargeblock&&a.rage<60||(a.stats.ap>=a.spells.execute.priorityap?a.spells.bloodthirst&&a.spells.bloodthirst.canUse()?(a.spelldelay=1,e=a.spells.bloodthirst):a.spells.mortalstrike&&a.spells.mortalstrike.canUse()&&(a.spelldelay=1,e=a.spells.mortalstrike):a.spells.execute.canUse()&&(a.spelldelay=1,e=a.spells.execute)):a.auras.rampage&&a.auras.rampage.canUse()?(a.spelldelay=1,e=a.auras.rampage):a.spells.ragingblow&&a.spells.ragingblow.canUse(!1)?(a.spelldelay=1,e=a.spells.ragingblow):a.spells.slam&&a.freeslam&&a.spells.slam.canUse()?(a.spelldelay=1,e=a.spells.slam):a.spells.shieldslam&&a.freeshieldslam&&a.spells.shieldslam.canUse()?(a.spelldelay=1,e=a.spells.shieldslam):a.spells.blademasterfury&&a.spells.blademasterfury.canUse()?(a.spelldelay=1,e=a.spells.blademasterfury):a.auras.consumedrage&&a.auras.consumedrage.procblock&&!a.auras.consumedrage.timer&&a.rage<60||a.auras.consumedrage&&a.auras.consumedrage.rageblock&&a.rage<a.auras.consumedrage.rageblock||a.auras.consumedrage&&a.auras.consumedrage.chargeblock&&a.auras.consumedrage.stacks<a.auras.consumedrage.chargeblock&&a.rage<60||(a.spells.overpower&&a.spells.overpower.canUse()?(a.spelldelay=1,e=a.spells.overpower):a.auras.rend&&a.auras.rend.canUse()?(a.spelldelay=1,e=a.auras.rend):a.spells.bloodthirst&&a.spells.bloodthirst.canUse()?(a.spelldelay=1,e=a.spells.bloodthirst):a.spells.mortalstrike&&a.spells.mortalstrike.canUse()?(a.spelldelay=1,e=a.spells.mortalstrike):a.spells.shieldslam&&a.spells.shieldslam.canUse()?(a.spelldelay=1,e=a.spells.shieldslam):a.precisetiming&&a.spells.slam&&a.spells.slam.canUse()?(a.spelldelay=1,e=a.spells.slam):a.spells.whirlwind&&a.spells.whirlwind.canUse()?(a.spelldelay=1,e=a.spells.whirlwind):a.spells.shockwave&&a.spells.shockwave.canUse()?(a.spelldelay=1,e=a.spells.shockwave):!a.precisetiming&&a.spells.slam&&a.spells.slam.canUse()?(a.spelldelay=1,e=a.spells.slam):a.spells.thunderclap&&a.spells.thunderclap.canUse()?(a.spelldelay=1,e=a.spells.thunderclap):a.spells.quickstrike&&a.spells.quickstrike.canUse()?(a.spelldelay=1,e=a.spells.quickstrike):a.spells.sunderarmor&&a.spells.sunderarmor.canUse()?(a.spelldelay=1,e=a.spells.sunderarmor):a.spells.hamstring&&a.spells.hamstring.canUse()&&(a.spelldelay=1,e=a.spells.hamstring))),a.heroicdelay&&(l=!1)),l&&!a.heroicdelay&&(a.spells.execute&&(!(step<this.executestep)||a.auras.suddendeath&&a.auras.suddendeath.timer)||a.auras.consumedrage&&a.auras.consumedrage.procblock&&!a.auras.consumedrage.timer&&a.rage<60||a.auras.consumedrage&&a.auras.consumedrage.rageblock&&a.rage<a.auras.consumedrage.rageblock||a.auras.consumedrage&&a.auras.consumedrage.chargeblock&&a.auras.consumedrage.stacks<a.auras.consumedrage.chargeblock&&a.rage<60||(a.spells.heroicstrike&&a.spells.heroicstrike.canUse()?(a.heroicdelay=1,s=a.spells.heroicstrike):a.spells.cleave&&a.spells.cleave.canUse()&&(a.heroicdelay=1,s=a.spells.cleave)),l=!1),a.spelldelay&&e&&(t||a.spelldelay>e.maxdelay))if(a.heroicdelay&&s&&a.heroicdelay>s.maxdelay&&(a.heroicdelay=s.maxdelay-99),e.canUse()){if(e instanceof Slam){i=step+e.casttime,a.freeslam&&(i=step),a.timer=1500,a.heroicdelay=0,a.nextswinghs=!1,r=0,log&&this.player.log("Casting Slam");continue}let t=a.cast(e,s);if(this.idmg+=t,a.spelldelay=0,l=!0,e instanceof Whirlwind||e instanceof BlademasterFury||e instanceof ThunderClap||e instanceof Shockwave)for(let l=0;l<a.adjacent;l++)t=a.cast(e,s,a.adjacent,t),this.idmg+=t}else a.spelldelay=0;a.heroicdelay&&s&&a.heroicdelay>s.maxdelay&&(s.canUse()?(a.cast(s),a.heroicdelay=0,l=!0):a.heroicdelay=0),a.spells.execute&&(!(step<this.executestep)||a.auras.suddendeath&&a.auras.suddendeath.timer)||(a.spells.heroicstrike&&a.spells.heroicstrike.unqueue&&a.nextswinghs&&a.rage<a.spells.heroicstrike.unqueue&&a.mh.timer<=a.spells.heroicstrike.unqueuetimer?(this.player.nextswinghs=!1,log&&this.player.log("Heroic Strike unqueued")):a.spells.cleave&&a.spells.cleave.unqueue&&a.nextswinghs&&a.rage<a.spells.cleave.unqueue&&a.mh.timer<=a.spells.cleave.unqueuetimer&&(this.player.nextswinghs=!1,log&&this.player.log("Cleave unqueued")))}if(i&&step==i){let t=a.cast(e,s);this.idmg+=t,l=!0,i=0}if(a.extraattacks>0&&(a.mh.timer=0,a.extraattacks--),a.batchedextras>0&&(a.mh.timer=batching-step%batching,a.batchedextras--),i)r=i-step;else{if(!a.mh.timer||!a.spelldelay&&l||!a.heroicdelay&&l){r=0;continue}r=Math.min(a.mh.timer,a.oh?a.oh.timer:9999),a.spelldelay&&e.maxdelay-a.spelldelay<r&&(r=e.maxdelay-a.spelldelay+1),a.heroicdelay&&s.maxdelay-a.heroicdelay<r&&(r=s.maxdelay-a.heroicdelay+1)}if(a.timer&&a.timer<r&&(r=a.timer),a.itemtimer&&a.itemtimer<r&&(r=a.itemtimer),a.stancetimer&&a.stancetimer<r&&(r=a.stancetimer),a.ragetimer&&a.ragetimer<r&&(r=a.ragetimer),a.target.speed&&a.target.speed-step%a.target.speed<r&&(r=a.target.speed-step%a.target.speed),a.talents.angermanagement&&3e3-step%3e3<r&&(r=3e3-step%3e3),a.vaelbuff&&1e3-step%1e3<r&&(r=1e3-step%1e3),a.spells.themoltencore&&1e3-step%1e3<r&&(r=1e3-step%1e3),a.auras.bloodrage&&a.auras.bloodrage.timer&&1e3-(step-a.auras.bloodrage.starttimer)%1e3<r&&(r=1e3-(step-a.auras.bloodrage.starttimer)%1e3),a.auras.gabbar&&a.auras.gabbar.timer&&2e3-(step-a.auras.gabbar.starttimer)%2e3<r&&(r=2e3-(step-a.auras.gabbar.starttimer)%2e3),a.auras.rend&&a.auras.rend.timer&&3e3-(step-a.auras.rend.starttimer)%3e3<r&&(r=3e3-(step-a.auras.rend.starttimer)%3e3),a.auras.deepwounds&&a.auras.deepwounds.timer&&a.auras.deepwounds.nexttick-step<r&&(r=a.auras.deepwounds.nexttick-step),a.auras.potentvenoms&&a.auras.potentvenoms.timer&&a.auras.potentvenoms.nexttick-step<r&&(r=a.auras.potentvenoms.nexttick-step),a.adjacent&&(a.auras.deepwounds2&&a.auras.deepwounds2.timer&&a.auras.deepwounds2.nexttick-step<r&&(r=a.auras.deepwounds2.nexttick-step),a.auras.deepwounds3&&a.auras.deepwounds3.timer&&a.auras.deepwounds3.nexttick-step<r&&(r=a.auras.deepwounds3.nexttick-step),a.auras.deepwounds4&&a.auras.deepwounds4.timer&&a.auras.deepwounds4.nexttick-step<r&&(r=a.auras.deepwounds4.nexttick-step),a.auras.potentvenoms2&&a.auras.potentvenoms2.timer&&a.auras.potentvenoms2.nexttick-step<r&&(r=a.auras.potentvenoms2.nexttick-step)),a.auras.weaponbleedmh&&a.auras.weaponbleedmh.timer&&a.auras.weaponbleedmh.interval-(step-a.auras.weaponbleedmh.starttimer)%a.auras.weaponbleedmh.interval<r&&(r=a.auras.weaponbleedmh.interval-(step-a.auras.weaponbleedmh.starttimer)%a.auras.weaponbleedmh.interval),a.auras.weaponbleedoh&&a.auras.weaponbleedoh.timer&&a.auras.weaponbleedoh.interval-(step-a.auras.weaponbleedoh.starttimer)%a.auras.weaponbleedoh.interval<r&&(r=a.auras.weaponbleedoh.interval-(step-a.auras.weaponbleedoh.starttimer)%a.auras.weaponbleedoh.interval),a.spells.bloodthirst&&a.spells.bloodthirst.timer&&a.spells.bloodthirst.timer<r&&(r=a.spells.bloodthirst.timer),a.spells.mortalstrike&&a.spells.mortalstrike.timer&&a.spells.mortalstrike.timer<r&&(r=a.spells.mortalstrike.timer),a.spells.shieldslam&&a.spells.shieldslam.timer&&a.spells.shieldslam.timer<r&&(r=a.spells.shieldslam.timer),a.spells.quickstrike&&a.spells.quickstrike.timer&&a.spells.quickstrike.timer<r&&(r=a.spells.quickstrike.timer),a.spells.ragingblow&&a.spells.ragingblow.timer&&a.spells.ragingblow.timer<r&&(r=a.spells.ragingblow.timer),a.spells.whirlwind&&a.spells.whirlwind.timer&&a.spells.whirlwind.timer<r&&(r=a.spells.whirlwind.timer),a.spells.shockwave&&a.spells.shockwave.timer&&a.spells.shockwave.timer<r&&(r=a.spells.shockwave.timer),a.spells.blademasterfury&&a.spells.blademasterfury.timer&&a.spells.blademasterfury.timer<r&&(r=a.spells.blademasterfury.timer),a.spells.bloodrage&&a.spells.bloodrage.timer&&a.spells.bloodrage.timer<r&&(r=a.spells.bloodrage.timer),a.spells.ragepotion&&a.spells.ragepotion.timer&&a.spells.ragepotion.timer<r&&(r=a.spells.ragepotion.timer),a.spells.overpower&&a.spells.overpower.timer&&a.spells.overpower.timer<r&&(r=a.spells.overpower.timer),a.spells.execute&&a.spells.execute.timer&&a.spells.execute.timer<r&&(r=a.spells.execute.timer),a.spells.slam&&a.spells.slam.timer&&a.spells.slam.timer<r&&(r=a.spells.slam.timer),!a.spells.execute||step<this.executestep&&(!a.auras.suddendeath||!a.auras.suddendeath.timer))if(a.spells.heroicstrike&&a.spells.heroicstrike.unqueue){let e=Math.max(a.mh.timer-a.spells.heroicstrike.unqueuetimer);e>0&&e<r&&(r=e)}else if(a.spells.cleave&&a.spells.cleave.unqueue){let e=Math.max(a.mh.timer-a.spells.cleave.unqueuetimer);e>0&&e<r&&(r=e)}if((step+=r)>this.maxsteps)break;a.mh.step(r),a.oh&&a.oh.step(r),t=!1,a.timer&&a.steptimer(r)&&!a.spelldelay&&(l=!0,t=a.spellqueueing),a.itemtimer&&a.stepitemtimer(r)&&!a.spelldelay&&(l=!0),a.stancetimer&&a.stepstancetimer(r)&&!a.spelldelay&&(l=!0),a.ragetimer&&a.stepragetimer(r),a.dodgetimer&&a.stepdodgetimer(r),a.spelldelay&&(a.spelldelay+=r),a.heroicdelay&&(a.heroicdelay+=r),a.spells.ragingblow&&a.spells.ragingblow.timer&&!a.spells.ragingblow.step(r)&&!a.spelldelay&&(l=!0),a.spells.berserkerrage&&a.spells.berserkerrage.timer&&!a.spells.berserkerrage.step(r)&&!a.spelldelay&&(l=!0),a.spells.bloodthirst&&a.spells.bloodthirst.timer&&!a.spells.bloodthirst.step(r)&&!a.spelldelay&&(l=!0),a.spells.mortalstrike&&a.spells.mortalstrike.timer&&!a.spells.mortalstrike.step(r)&&!a.spelldelay&&(l=!0),a.spells.shieldslam&&a.spells.shieldslam.timer&&!a.spells.shieldslam.step(r)&&!a.spelldelay&&(l=!0),a.spells.quickstrike&&a.spells.quickstrike.timer&&!a.spells.quickstrike.step(r)&&!a.spelldelay&&(l=!0),a.spells.whirlwind&&a.spells.whirlwind.timer&&!a.spells.whirlwind.step(r)&&!a.spelldelay&&(l=!0),a.spells.shockwave&&a.spells.shockwave.timer&&!a.spells.shockwave.step(r)&&!a.spelldelay&&(l=!0),a.spells.blademasterfury&&a.spells.blademasterfury.timer&&!a.spells.blademasterfury.step(r)&&!a.spelldelay&&(l=!0),a.spells.bloodrage&&a.spells.bloodrage.timer&&!a.spells.bloodrage.step(r)&&!a.spelldelay&&(l=!0),a.spells.ragepotion&&a.spells.ragepotion.timer&&!a.spells.ragepotion.step(r)&&!a.spelldelay&&(l=!0),a.spells.overpower&&a.spells.overpower.timer&&!a.spells.overpower.step(r)&&!a.spelldelay&&(l=!0),a.spells.execute&&a.spells.execute.timer&&!a.spells.execute.step(r)&&!a.spelldelay&&(l=!0),a.spells.hamstring&&a.spells.hamstring.timer&&!a.spells.hamstring.step(r)&&!a.spelldelay&&(l=!0),a.spells.thunderclap&&a.spells.thunderclap.timer&&!a.spells.thunderclap.step(r)&&!a.spelldelay&&(l=!0),a.spells.sunderarmor&&a.spells.sunderarmor.timer&&!a.spells.sunderarmor.step(r)&&!a.spelldelay&&(l=!0),a.spells.slam&&a.spells.slam.timer&&!a.spells.slam.step(r)&&!a.spelldelay&&(l=!0),a.auras.bloodrage&&a.auras.bloodrage.timer&&!a.auras.bloodrage.step()&&!a.spelldelay&&(l=!0),a.auras.gabbar&&a.auras.gabbar.timer&&a.auras.gabbar.step(),a.auras.rend&&a.auras.rend.timer&&!a.auras.rend.step()&&!a.spelldelay&&(l=!0),a.auras.deepwounds&&a.auras.deepwounds.timer&&!a.auras.deepwounds.step()&&!a.spelldelay&&(l=!0),a.auras.potentvenoms&&a.auras.potentvenoms.timer&&!a.auras.potentvenoms.step()&&!a.spelldelay&&(l=!0),a.auras.weaponbleedmh&&a.auras.weaponbleedmh.timer&&!a.auras.weaponbleedmh.step()&&!a.spelldelay&&(l=!0),a.auras.weaponbleedoh&&a.auras.weaponbleedoh.timer&&!a.auras.weaponbleedoh.step()&&!a.spelldelay&&(l=!0),a.adjacent&&(a.auras.deepwounds2&&a.auras.deepwounds2.timer&&!a.auras.deepwounds2.step()&&!a.spelldelay&&(l=!0),a.auras.deepwounds3&&a.auras.deepwounds3.timer&&!a.auras.deepwounds3.step()&&!a.spelldelay&&(l=!0),a.auras.deepwounds4&&a.auras.deepwounds4.timer&&!a.auras.deepwounds4.step()&&!a.spelldelay&&(l=!0),a.auras.potentvenoms2&&a.auras.potentvenoms2.timer&&!a.auras.potentvenoms2.step()&&!a.spelldelay&&(l=!0))}a.endauras(),a.auras.deepwounds&&(this.idmg+=a.auras.deepwounds.idmg),a.auras.deepwounds2&&(this.idmg+=a.auras.deepwounds2.idmg),a.auras.deepwounds3&&(this.idmg+=a.auras.deepwounds3.idmg),a.auras.deepwounds4&&(this.idmg+=a.auras.deepwounds4.idmg),a.auras.potentvenoms&&(this.idmg+=a.auras.potentvenoms.idmg),a.auras.potentvenoms2&&(this.idmg+=a.auras.potentvenoms2.idmg),a.auras.rend&&(this.idmg+=a.auras.rend.idmg),a.auras.weaponbleedmh&&(this.idmg+=a.auras.weaponbleedmh.idmg),a.auras.weaponbleedoh&&(this.idmg+=a.auras.weaponbleedoh.idmg),a.spells.fireball&&(this.idmg+=a.spells.fireball.idmg),a.spells.gunaxe&&(this.idmg+=a.spells.gunaxe.idmg),a.spells.themoltencore&&(this.idmg+=a.spells.themoltencore.idmg),this.totaldmg+=this.idmg,this.totalduration+=this.duration;let d=this.idmg/this.duration;d<this.mindps&&(this.mindps=d),d>this.maxdps&&(this.maxdps=d),this.sumdps+=d,this.sumdps2+=d*d,d=Math.round(d),this.spread[d]?this.spread[d]++:this.spread[d]=1}update(e){this.cb_update&&this.cb_update(e,{iterations:this.iterations,totaldmg:this.totaldmg,totalduration:this.totalduration})}finished(){this.cb_finished&&this.cb_finished({iterations:this.iterations,totaldmg:this.totaldmg,totalduration:this.totalduration,mindps:this.mindps,maxdps:this.maxdps,sumdps:this.sumdps,sumdps2:this.sumdps2,starttime:this.starttime,endtime:this.endtime})}}function rng(e,s){return~~(Math.random()*(s-e+1)+e)}function rng10k(){return~~(1e4*Math.random())}function avg(e,s){return(e+s)/2}